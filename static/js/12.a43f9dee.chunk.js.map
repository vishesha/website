{"version":3,"sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["DarkModeSwitcher","_ref","onClose","isDarkMode","setIsDarkMode","useContext","ThemeContext","t","useTranslation","_jsx","FormControlLabel","control","Switch","checked","name","color","onChange","label","useStyles","makeStyles","svgContainer","width","height","Logo","props","classes","theme","useTheme","className","children","xmlns","xmlnsXlink","viewBox","x","y","dominantBaseline","textAnchor","fontSize","fontWeight","fill","logoColor","fontFamily","languages","code","country_code","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","LangSelector","anchorEl","setAnchorEl","useState","handleClose","i18n","changeLanguage","currentLanguage","find","elem","_jsxs","Button","variant","onClick","e","currentTarget","_Fragment","concat","KeyboardArrowDownSharp","style","Menu","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","spy","smooth","offset","duration","AnimatedLink","React","forwardRef","ref","motion","div","custom","animate","Link","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","root","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","homeIsActive","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","isMobile","useMediaQuery","breakpoints","down","useEffect","Events","scrollEvent","register","to","element","remove","start","opacity","i","delay","spyHandleChange","index","indicatorColor","textColor","handleChange","event","newValue","scrollButtons","component","onSetActive","onSetInactive","MuiLink","href","underline","marginLeft","drawer","background","default","list","fullList","listItem","justifyContent","padding","btnContainer","active","MobileMenu","onOpen","listItemProps","button","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","cursor","line","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","rest","variants","initial","rotate","logo","navbar","toolbar","Navbar","setHomeIsActive","loaderContext","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","handleNav","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","Hidden","smDown","mdUp"],"mappings":"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","file":"static/js/12.a43f9dee.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nconst DarkModeSwitcher = ({ onClose }) => {\n  const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={isDarkMode}\n          name=\"checkedDarkMode\"\n          color=\"primary\"\n          onChange={() => {\n            if (onClose) {\n              onClose();\n            }\n            setIsDarkMode(!isDarkMode);\n          }}\n        />\n      }\n      label={t(\"dark_mode\")}\n    />\n  );\n};\n\nexport default DarkModeSwitcher;\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\n\nexport default DarkModeSwitcher","// import * as React from \"react\";\n// import { useTheme } from \"@material-ui/styles\";\n\n// const Logo = (props) => {\n//   const theme = useTheme();\n//   return (\n//     <svg\n//       xmlns=\"http://www.w3.org/2000/svg\"\n//       xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n//       viewBox=\"0 0 378.9 110.9\"\n//       {...props}\n//     >\n//       <text\n//         x=\"50%\"\n//         y=\"50%\"\n//         dominantBaseline=\"middle\"\n//         textAnchor=\"middle\"\n//         fontSize=\"48\"\n//         fontWeight=\"bold\"\n//         fill={theme.logoColor}\n//         fontFamily=\"Garamond\" //{theme.typography.fontFamily}\n//       >\n//         Vishesha Sadu\n//       </text>\n//     </svg>\n//   );\n// };\n\n// export default Logo;\n\n//responsive\n\nimport React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  svgContainer: {\n    width: \"100%\",\n    height: \"auto\",\n  },\n}));\n\nconst Logo = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div className={classes.svgContainer}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox=\"0 0 378.9 110.9\"\n        {...props}\n      >\n        <text\n          x=\"50%\"\n          y=\"50%\"\n          dominantBaseline=\"middle\"\n          textAnchor=\"middle\"\n          fontSize=\"4vw\" // Adjust the font size based on your preference\n          fontWeight=\"bold\"\n          fill={theme.logoColor}\n          fontFamily=\"Garamond\" //{theme.typography.fontFamily}\n        >\n          Vishesha Sadu\n        </text>\n      </svg>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { useState } from \"react\";\r\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"flag-icon-css/css/flag-icon.min.css\";\r\n\r\nconst languages = [\r\n    {\r\n        code: \"fr\",\r\n        name: \"FR\",\r\n        country_code: \"fr\",\r\n    },\r\n    {\r\n        code: \"en\",\r\n        name: \"EN\",\r\n        country_code: \"gb\",\r\n    },\r\n];\r\n\r\nconst LangSelector = (props) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClose = (code) => {\r\n        i18n.changeLanguage(code);\r\n        setAnchorEl(null);\r\n        if (props.onClose) {\r\n            props.onClose();\r\n        }\r\n    };\r\n\r\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\r\n\r\n    return (\r\n        <div {...props}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                {currentLanguage && (\r\n                    <>\r\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\r\n                        {currentLanguage.name}\r\n                    </>\r\n                )}\r\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\r\n            </Button>\r\n            <Menu\r\n                id=\"profile-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => setAnchorEl(null)}\r\n                keepMounted\r\n                elevation={0}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                className={classes.profileMenu}\r\n                disableScrollLock\r\n            >\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\r\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\r\n                    EN\r\n                </MenuItem>\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\r\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\r\n                    FR\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileMenu: {\r\n        \"& .MuiPaper-root\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            marginTop: \"2px\",\r\n            boxShadow: theme.shadows[4],\r\n        },\r\n    },\r\n    menuItem: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.backgroundSecondary,\r\n        },\r\n    },\r\n    flagIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default LangSelector;\r\n","// import React, { useState, useEffect, useContext } from \"react\";\n// import {\n//   Tab,\n//   Tabs,\n//   Button,\n//   makeStyles,\n//   withStyles,\n//   Link as MuiLink,\n// } from \"@material-ui/core\";\n// import { motion, useAnimation } from \"framer-motion\";\n// import { Link, Events } from \"react-scroll\";\n// import LangSelector from \"./LangSelector\";\n// import LoaderContext from \"../../contexts/loaderContext\";\n// import { useTranslation } from \"react-i18next\";\n\n// const smoothScrollProps = {\n//   spy: true,\n//   smooth: true,\n//   offset: -70,\n//   duration: 500,\n// };\n\n// const AnimatedLink = React.forwardRef((props, ref) => (\n//   <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n//     <Link {...smoothScrollProps} {...props} />\n//   </motion.div>\n// ));\n\n// const Menu = ({ homeIsActive }) => {\n//   const classes = useStyles();\n//   const [value, setValue] = useState(false);\n//   const [isScrolling, setIsScrolling] = useState(false);\n//   const { isLoading } = useContext(LoaderContext);\n//   const controls = useAnimation();\n//   const { t } = useTranslation();\n\n//   useEffect(() => {\n//     Events.scrollEvent.register(\"begin\", (to, element) => {\n//       setIsScrolling(true);\n//     });\n\n//     Events.scrollEvent.register(\"end\", (to, element) => {\n//       setIsScrolling(false);\n//     });\n//   });\n\n//   useEffect(() => {\n//     if (!isLoading) {\n//       controls.start((i) => ({\n//         y: 0,\n//         opacity: 1,\n//         transition: { delay: i * 0.1 + 0.3 },\n//       }));\n//     } else {\n//       controls.start({ opacity: 0, y: -5 });\n//     }\n//   }, [isLoading, controls]);\n\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n\n//   const spyHandleChange = (index) => {\n//     if (!isScrolling) {\n//       setValue(index);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (homeIsActive) {\n//       setValue(false);\n//     }\n//   }, [homeIsActive]);\n\n//   return (\n//     <div className={classes.wrapper}>\n//       <StyledTabs\n//         className={classes.tabs}\n//         value={value}\n//         indicatorColor=\"primary\"\n//         textColor=\"primary\"\n//         onChange={handleChange}\n//         aria-label=\"disabled tabs example\"\n//       >\n//         <StyledTab\n//           component={AnimatedLink}\n//           custom={0}\n//           animate={controls}\n//           to=\"about\"\n//           label={t(\"menu_about\")}\n//           onSetActive={() => spyHandleChange(0)}\n//           onSetInactive={() => spyHandleChange(false)}\n//         />\n//         <StyledTab\n//           component={AnimatedLink}\n//           custom={0}\n//           animate={controls}\n//           to=\"skills\"\n//           label=\"Skills\"\n//           onSetActive={() => spyHandleChange(0)}\n//           onSetInactive={() => spyHandleChange(false)}\n//         />\n//         <StyledTab\n//           component={AnimatedLink}\n//           animate={controls}\n//           custom={1}\n//           to=\"experience\"\n//           label={t(\"menu_experience\")}\n//           onSetActive={() => spyHandleChange(1)}\n//         />\n//         <StyledTab\n//           component={AnimatedLink}\n//           animate={controls}\n//           custom={2}\n//           to=\"projects\"\n//           label={t(\"menu_projects\")}\n//           onSetActive={() => spyHandleChange(2)}\n//         />\n//         <StyledTab\n//           component={AnimatedLink}\n//           animate={controls}\n//           custom={3}\n//           to=\"contact\"\n//           label={t(\"menu_contact\")}\n//           onSetActive={() => spyHandleChange(3)}\n//         />\n//       </StyledTabs>\n//       <motion.div custom={4} animate={controls}>\n//         <Button\n//           component={MuiLink}\n//           href=\"/resume.pdf\"\n//           variant=\"outlined\"\n//           color=\"primary\"\n//           underline=\"none\"\n//         >\n//           {t(\"menu_resume\")}\n//         </Button>\n//       </motion.div>\n//       {/* <motion.div custom={5} animate={controls}>\n//                 <LangSelector style={{ marginLeft: \"32px\" }} />\n//             </motion.div> */}\n//     </div>\n//   );\n// };\n\n// const useStyles = makeStyles((theme) => ({\n//   wrapper: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//   },\n//   tabs: {\n//     marginRight: theme.spacing(4),\n//   },\n//   navMenuItem: {\n//     marginRight: theme.spacing(1),\n//   },\n// }));\n\n// const StyledTab = withStyles((theme) => ({\n//   root: {\n//     transition: \".2s\",\n//     minWidth: 120,\n//     \"&:hover\": {\n//       color: theme.palette.text.primary,\n//     },\n//   },\n// }))((props) => <Tab disableRipple {...props} />);\n\n// const StyledTabs = withStyles({\n//   indicator: {\n//     \"& > span\": {\n//       maxWidth: 20,\n//     },\n//   },\n// })((props) => (\n//   <Tabs\n//     {...props}\n//     variant=\"fullWidth\"\n//     TabIndicatorProps={{ children: <span /> }}\n//   />\n// ));\n\n// export default Menu;\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Tab,\n  Tabs,\n  Button,\n  makeStyles,\n  withStyles,\n  Link as MuiLink,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link, Events } from \"react-scroll\";\nimport LangSelector from \"./LangSelector\";\nimport LoaderContext from \"../../contexts/loaderContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst smoothScrollProps = {\n  spy: true,\n  smooth: true,\n  offset: -70,\n  duration: 500,\n};\n\nconst AnimatedLink = React.forwardRef((props, ref) => (\n  <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n    <Link {...smoothScrollProps} {...props} />\n  </motion.div>\n));\n\nconst Menu = ({ homeIsActive }) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(false);\n  const [isScrolling, setIsScrolling] = useState(false);\n  const { isLoading } = useContext(LoaderContext);\n  const controls = useAnimation();\n  const { t } = useTranslation();\n\n  const isMobile = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  useEffect(() => {\n    Events.scrollEvent.register(\"begin\", (to, element) => {\n      setIsScrolling(true);\n    });\n\n    Events.scrollEvent.register(\"end\", (to, element) => {\n      setIsScrolling(false);\n    });\n\n    return () => {\n      Events.scrollEvent.remove(\"begin\");\n      Events.scrollEvent.remove(\"end\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      controls.start((i) => ({\n        y: 0,\n        opacity: 1,\n        transition: { delay: i * 0.1 + 0.3 },\n      }));\n    } else {\n      controls.start({ opacity: 0, y: -5 });\n    }\n  }, [isLoading, controls]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const spyHandleChange = (index) => {\n    if (!isScrolling) {\n      setValue(index);\n    }\n  };\n\n  useEffect(() => {\n    if (homeIsActive) {\n      setValue(false);\n    }\n  }, [homeIsActive]);\n\n  return (\n    <div className={classes.wrapper}>\n      <StyledTabs\n        className={classes.tabs}\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant={isMobile ? \"scrollable\" : \"fullWidth\"}\n        scrollButtons={isMobile ? \"auto\" : \"off\"}\n      >\n        <StyledTab\n          component={AnimatedLink}\n          custom={0}\n          animate={controls}\n          to=\"about\"\n          label={t(\"menu_about\")}\n          onSetActive={() => spyHandleChange(0)}\n          onSetInactive={() => spyHandleChange(false)}\n        />\n        <StyledTab\n          component={AnimatedLink}\n          custom={0}\n          animate={controls}\n          to=\"skills\"\n          label=\"Skills\"\n          onSetActive={() => spyHandleChange(0)}\n          onSetInactive={() => spyHandleChange(false)}\n        />\n        <StyledTab\n          component={AnimatedLink}\n          animate={controls}\n          custom={1}\n          to=\"experience\"\n          label={t(\"menu_experience\")}\n          onSetActive={() => spyHandleChange(1)}\n        />\n        <StyledTab\n          component={AnimatedLink}\n          animate={controls}\n          custom={2}\n          to=\"projects\"\n          label={t(\"menu_projects\")}\n          onSetActive={() => spyHandleChange(2)}\n        />\n        <StyledTab\n          component={AnimatedLink}\n          animate={controls}\n          custom={3}\n          to=\"contact\"\n          label={t(\"menu_contact\")}\n          onSetActive={() => spyHandleChange(3)}\n        />\n      </StyledTabs>\n      <motion.div custom={4} animate={controls}>\n        <Button\n          component={MuiLink}\n          href=\"/resume.pdf\"\n          variant=\"outlined\"\n          color=\"primary\"\n          underline=\"none\"\n        >\n          {t(\"menu_resume\")}\n        </Button>\n      </motion.div>\n      {isMobile && (\n        <motion.div custom={5} animate={controls}>\n          <LangSelector style={{ marginLeft: \"32px\" }} />\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  tabs: {\n    marginRight: theme.spacing(4),\n  },\n  navMenuItem: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    transition: \".2s\",\n    minWidth: 120,\n    \"&:hover\": {\n      color: theme.palette.text.primary,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n  indicator: {\n    \"& > span\": {\n      maxWidth: 20,\n    },\n  },\n})((props) => (\n  <Tabs\n    {...props}\n    variant=\"fullWidth\"\n    TabIndicatorProps={{ children: <span /> }}\n  />\n));\n\nexport default Menu;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Drawer,\n  List,\n  Button,\n  Divider,\n  ListItem,\n  Link as MuiLink,\n} from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\nimport LangSelector from \"./LangSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MobileMenu = ({ open, onClose, onOpen }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const listItemProps = {\n    button: true,\n    component: Link,\n    onClick: onClose,\n    onKeyDown: onClose,\n    spy: true,\n    smooth: true,\n    offset: 0,\n    duration: 500,\n    className: classes.listItem,\n    activeClass: classes.active,\n  };\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      open={open}\n      onClose={onClose}\n      classes={{ paper: classes.drawer }}\n    >\n      <div className={classes.list} role=\"presentation\">\n        <List className={classes.fullList}>\n          <ListItem {...listItemProps} to=\"about\">\n            {t(\"menu_about\")}\n          </ListItem>\n          <ListItem {...listItemProps} to=\"skills\">\n            Skills\n          </ListItem>\n          <ListItem {...listItemProps} to=\"experience\">\n            {t(\"menu_experience\")}\n          </ListItem>\n          <ListItem {...listItemProps} to=\"projects\">\n            {t(\"menu_projects\")}\n          </ListItem>\n          <ListItem {...listItemProps} to=\"contact\">\n            {t(\"menu_contact\")}\n          </ListItem>\n          <ListItem className={classes.btnContainer}>\n            <Button\n              component={MuiLink}\n              href=\"/resume.pdf\"\n              variant=\"outlined\"\n              color=\"primary\"\n              underline=\"none\"\n            >\n              {t(\"menu_resume\")}\n            </Button>\n          </ListItem>\n          {/* <ListItem className={classes.btnContainer}>\n            <LangSelector onClose={onClose} />\n          </ListItem> */}\n          <ListItem className={classes.btnContainer}>\n            <DarkModeSwitcher onClose={onClose} />\n          </ListItem>\n          <Divider />\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    backgroundColor: theme.palette.background.default,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n    marginTop: theme.spacing(4),\n  },\n  listItem: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2, 0),\n    \"&:hover\": {\n      backgroundColor: \"rgb(80,80,80)\",\n    },\n  },\n  btnContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  active: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nexport default MobileMenu;\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst HamburgerIcon = ({ isOpen, ...rest }) => {\r\n  const controls = useAnimation();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      controls.start(\"animate\");\r\n    } else {\r\n      controls.start(\"initial\");\r\n    }\r\n  }, [isOpen, controls]);\r\n  return (\r\n    <motion.div className={classes.container} {...rest}>\r\n      <motion.div\r\n        className={`${classes.line} ${classes.line1}`}\r\n        variants={{\r\n          initial: { rotate: 0, y: 0 },\r\n          animate: { rotate: 45, y: 9 },\r\n        }}\r\n        animate={controls}\r\n      ></motion.div>\r\n      <motion.div\r\n        className={`${classes.line} ${classes.line2}`}\r\n        variants={{\r\n          initial: { x: 0, opacity: 1 },\r\n          animate: { x: 250, opacity: 0 },\r\n        }}\r\n        animate={controls}\r\n      ></motion.div>\r\n      <motion.div\r\n        className={`${classes.line} ${classes.line3}`}\r\n        variants={{\r\n          initial: { rotate: 0, y: 0 },\r\n          animate: { rotate: -45, y: -9 },\r\n        }}\r\n        animate={controls}\r\n      ></motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    overflow: \"hidden\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    cursor: \"pointer\",\r\n    padding: \"2px\",\r\n  },\r\n  line: {\r\n    height: \"3px\",\r\n    backgroundColor: theme.palette.text.secondary,\r\n  },\r\n  line1: {\r\n    width: \"35px\",\r\n    marginBottom: \"7px\",\r\n  },\r\n  line2: {\r\n    width: \"25px\",\r\n    marginBottom: \"7px\",\r\n  },\r\n  line3: {\r\n    width: \"35px\",\r\n  },\r\n}));\r\n\r\nexport default HamburgerIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        width: \"150px\",\n    },\n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\nexport default Navbar;\n"],"sourceRoot":""}